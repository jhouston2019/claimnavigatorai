import OpenAI from "openai";

export default async function handler(req, res) {
    // Set CORS headers
    res.setHeader('Access-Control-Allow-Origin', '*');
    res.setHeader('Access-Control-Allow-Headers', 'Content-Type');
    res.setHeader('Access-Control-Allow-Methods', 'POST, OPTIONS');

    // Handle preflight requests
    if (req.method === 'OPTIONS') {
        return res.status(200).end();
    }

    // Only allow POST requests
    if (req.method !== 'POST') {
        return res.status(405).json({ ok: false, error: 'Method not allowed' });
    }

    try {
        const { module, inputs } = req.body;

        if (!module || !inputs) {
            return res.status(400).json({ ok: false, error: 'Missing module or inputs' });
        }

        const client = new OpenAI({
            apiKey: process.env.OPENAI_API_KEY
        });

        const prompt = buildPrompt(module, inputs);
        
        const response = await client.chat.completions.create({
            model: "gpt-4o-mini",
            messages: [
                {
                    role: "system",
                    content: "You are an expert insurance claim analyst and consultant. Provide detailed, professional analysis with actionable recommendations. Format your response in clean HTML with proper headings, lists, and emphasis."
                },
                {
                    role: "user",
                    content: prompt
                }
            ],
            max_tokens: 2000,
            temperature: 0.3
        });

        const analysis = response.choices[0].message.content;
        
        // Wrap the analysis in a styled container
        const html = `
            <div class="analysis-output">
                <h4>üîç AI Analysis Results</h4>
                <div class="analysis-content">
                    ${analysis}
                </div>
                <div class="analysis-footer">
                    <p><em>Generated by ClaimNavigatorAI ‚Ä¢ ${new Date().toLocaleDateString()}</em></p>
                </div>
            </div>
        `;

        return res.status(200).json({ ok: true, html });

    } catch (error) {
        console.error('Error in claim-analysis function:', error);
        return res.status(500).json({ 
            ok: false, 
            error: error.message || 'Internal server error' 
        });
    }
}

function buildPrompt(module, inputs) {
    switch (module) {
        case "policy":
            return `You are an expert insurance policy analyst. Analyze the following policy information and provide:

1. **Coverage Summary**: Key coverage provisions and limits
2. **Exclusions Analysis**: Important exclusions that may apply
3. **Recommendations**: Specific actions to strengthen the claim
4. **Risk Assessment**: Potential coverage gaps or issues

Policy Details:
- Policy Text: ${inputs.policyText || 'Not provided'}
- Policy Type: ${inputs.policyType || 'Not specified'}
- Jurisdiction: ${inputs.jurisdiction || 'Not specified'}
- Deductible: $${inputs.deductible || 'Not specified'}

Provide a comprehensive analysis with specific recommendations.`;

        case "damage":
            return `You are an expert insurance damage assessor. Analyze the following damage information and provide:

1. **Damage Assessment**: Detailed analysis of reported damage
2. **Cost Analysis**: Review of itemized costs and pricing
3. **Coverage Implications**: How damage types affect coverage
4. **Recommendations**: Next steps and documentation needs

Damage Details:
- Description: ${inputs.damageDesc || 'Not provided'}
- Damage Types: ${inputs.damageTypes?.join(', ') || 'Not specified'}
- Items: ${inputs.damageItems?.map(item => `${item.item}: ${item.qty} x $${item.cost} = $${item.total}`).join(', ') || 'Not provided'}

Provide detailed analysis with cost validation and coverage recommendations.`;

        case "estimates":
            return `You are an expert construction estimator and insurance consultant. Analyze the following estimate information and provide:

1. **Estimate Review**: Detailed analysis of provided estimates
2. **Cost Validation**: Labor rates, materials, and pricing analysis
3. **Comparison**: Differences between estimates and market rates
4. **Recommendations**: Which estimate is most accurate and why

Estimate Details:
- Labor Rate: $${inputs.laborRate || 'Not specified'} per hour
- Tax Rate: ${inputs.taxRate || 'Not specified'}%
- Include Overhead & Profit: ${inputs.includeOverhead ? 'Yes' : 'No'}
- Files Uploaded: ${inputs.fileCount || 0} files
- Notes: ${inputs.notes || 'None provided'}

Provide comprehensive estimate analysis with market comparisons and recommendations.`;

        case "business":
            return `You are a forensic accountant specializing in business interruption claims. Analyze the following business information and provide:

1. **Revenue Analysis**: Analysis of historical revenue patterns
2. **Loss Calculation**: Detailed business interruption loss calculation
3. **Extra Expenses**: Analysis of additional costs incurred
4. **Documentation**: Required documentation and evidence

Business Details:
- Business: ${inputs.businessName || 'Not specified'}
- Period: ${inputs.startDate || 'Not specified'} to ${inputs.endDate || 'Not specified'}
- Revenues: ${inputs.revenues || 'Not provided'}
- COGS: ${inputs.cogs || 'Not specified'}%
- Fixed Costs: ${inputs.fixed || 'Not specified'}%
- Variable Costs: ${inputs.variable || 'Not specified'}%
- Extra Expenses: ${inputs.extra || 'Not provided'}
- Business Type: ${inputs.businessType || 'Not specified'}
- Days: ${inputs.days || 'Not calculated'}

Provide detailed forensic accounting analysis with loss calculations and documentation requirements.`;

        case "settlement":
            return `You are an expert insurance negotiator and settlement analyst. Analyze the following settlement information and provide:

1. **Settlement Analysis**: Detailed analysis of the offer vs. valuation
2. **Negotiation Strategy**: Specific tactics and approaches
3. **Legal Considerations**: Jurisdictional factors and legal precedents
4. **Recommendations**: Next steps and negotiation timeline

Settlement Details:
- Insurance Offer: $${inputs.offer || 'Not specified'}
- Your Valuation: $${inputs.valuation || 'Not specified'}
- Disputed Categories: ${inputs.disputed || 'Not specified'}
- Jurisdiction: ${inputs.jurisdiction || 'Not specified'}
- Days Since Filed: ${inputs.days || 'Not specified'}
- Policy Limits: $${inputs.policyLimits || 'Not specified'}
- Additional Context: ${inputs.context || 'None provided'}

Provide comprehensive settlement analysis with negotiation strategies and legal considerations.`;

        case "expert":
            return `You are an expert witness coordinator and legal consultant. Analyze the following expert request and provide:

1. **Expert Request Analysis**: Assessment of the expert needs
2. **Expert Qualifications**: Specific qualifications and credentials needed
3. **Scope of Work**: Detailed scope and deliverables
4. **Timeline & Budget**: Realistic timeline and cost estimates

Expert Request Details:
- Description: ${inputs.description || 'Not provided'}
- Expertise Needed: ${inputs.expertise || 'Not specified'}
- Urgency: ${inputs.urgency || 'Not specified'}
- Qualifications: ${inputs.qualifications || 'Not specified'}
- Budget: ${inputs.budget || 'Not specified'}
- Timeline: ${inputs.timeline || 'Not specified'}
- Requirements: ${inputs.requirements || 'Not specified'}
- Documents: ${inputs.fileCount || 0} files uploaded

Provide detailed expert request analysis with specific recommendations for expert selection and engagement.`;

        default:
            return `You are an expert insurance claim consultant. Analyze the provided information and provide comprehensive recommendations for the claim.`;
    }
}